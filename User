import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Scanner;

public class User {

    private String name;
    private String directory_path;
    private final String CREATE_USER = """
            CREATE  table IF NOT EXISTS user  (id INT NOT NULL primary key auto_increment,name varchar(30) NOT NULL,directory_path varchar(150) NOT NULL)""";
    private final String SELECT_USER = """
            SELECT name,directory_path FROM user""";
    private final String INSERT_USER = """
            INSERT INTO user (name,directory_path) VALUES (?,?)""";

    Scanner scanner = new Scanner(System.in);

    public User() {
        Connection connection = ConUtil.get();
        try (PreparedStatement preparedStatement1 = connection.prepareStatement(CREATE_USER);
             PreparedStatement preparedStatement2 = connection.prepareStatement(SELECT_USER);
             PreparedStatement preparedStatement3 = connection.prepareStatement(INSERT_USER)) {
            connection.setAutoCommit(false);
            preparedStatement1.executeUpdate();
            ResultSet resultSet1 = preparedStatement2.executeQuery();
            if (resultSet1.next()) {
                name = resultSet1.getString("name");
                directory_path = resultSet1.getString("directory_path");
            } else {
                System.out.println("Введите имя пользователя");
                name = scanner.nextLine();
                System.out.println("Введите путь к директории, в которую будут сохранены файлы");
                directory_path = scanner.nextLine();
                preparedStatement3.setString(1, name);
                preparedStatement3.setString(2, directory_path);
                preparedStatement3.executeUpdate();
            }
            connection.commit();
            System.out.println("Пользователь зарегистрирован");
        } catch (SQLException e) {
            e.printStackTrace();
            try {
                connection.rollback();
            } catch (SQLException ex) {
                ex.printStackTrace();
            }
        } finally {
            if (connection != null) {
                try {
                    connection.close();
                    connection.setAutoCommit(true);
                } catch (SQLException e) {
                    e.printStackTrace();
                }
            }
        }
    }

    public String getDirectory_path() {
        return directory_path;
    }

    public String getName() {
        return name;
    }
}
